create or replace PACKAGE PCK_PPOS_PERSONAL AS

    PROCEDURE SP_L_PERSONAL (
        I_IDT_TIPO_DOCUMENTO   	IN    NUMBER,
        I_NRO_DOCUMENTO        	IN    VARCHAR2,
        I_NOMBRE   			 	IN    VARCHAR2,
		I_APE_PATERNO		 	IN    VARCHAR2,
		I_APE_MATERNO		 	IN    VARCHAR2,
        R_LISTA        			OUT   SYS_REFCURSOR,
        R_CODIGO       			OUT   NUMBER,
        R_MENSAJE      			OUT   VARCHAR2
    );

    PROCEDURE SP_I_PERSONAL (
        I_CARGO          		IN      VARCHAR2,
        I_IDT_TIPO_DOCUMENTO    IN      NUMBER,
        I_IDT_SEXO              IN      NUMBER,
        I_ID_PAIS               IN      NUMBER,
        I_ID_DEPARTAMENTO       IN      NUMBER,
        I_ID_PROVINCIA          IN      NUMBER,
        I_ID_DISTRITO           IN      NUMBER,
        I_NOMBRE         		IN      VARCHAR2,
		I_APE_PATERNO         	IN      VARCHAR2,
		I_APE_MATERNO         	IN      VARCHAR2,
		I_NRO_DOCUMENTO         IN      VARCHAR2,
		I_DIRECCION_DOMICILIO   IN      VARCHAR2,
		I_FEC_NACIMIENTO	    IN      VARCHAR2,
        I_FLG_ACTIVO         	IN      NUMBER,
        I_ID_USUARIO_CREA     	IN      NUMBER,
        I_FEC_USUARIO_CREA    	IN      VARCHAR2,
        R_ID                  	OUT     NUMBER,
		R_ID_PERSONA   			OUT  	NUMBER,
        R_CODIGO              	OUT     NUMBER,
        R_MENSAJE             	OUT     VARCHAR2
    );

    PROCEDURE SP_U_PERSONAL (
        I_ID                  	IN      NUMBER,
		I_ID_PERSONA           	IN      NUMBER,
        I_CARGO          		IN      VARCHAR2,
        I_IDT_TIPO_DOCUMENTO    IN      NUMBER,
        I_IDT_SEXO              IN      NUMBER,
        I_ID_PAIS               IN      NUMBER,
        I_ID_DEPARTAMENTO       IN      NUMBER,
        I_ID_PROVINCIA          IN      NUMBER,
        I_ID_DISTRITO           IN      NUMBER,
        I_NOMBRE         		IN      VARCHAR2,
		I_APE_PATERNO         	IN      VARCHAR2,
		I_APE_MATERNO         	IN      VARCHAR2,
		I_NRO_DOCUMENTO         IN      VARCHAR2,
		I_DIRECCION_DOMICILIO   IN      VARCHAR2,
		I_FEC_NACIMIENTO	    IN      VARCHAR2,
        I_FLG_ACTIVO         	IN      NUMBER,
        I_ID_USUARIO_MOD      	IN      NUMBER,
        I_FEC_USUARIO_MOD     	IN      VARCHAR2,
        R_CODIGO              	OUT     NUMBER,
        R_MENSAJE             	OUT     VARCHAR2
    );

    PROCEDURE SP_D_PERSONAL (
        I_ID                  IN      NUMBER,
        R_CODIGO              OUT     NUMBER,
        R_MENSAJE             OUT     VARCHAR2
    );

END PCK_PPOS_PERSONAL;

/
create or replace PACKAGE BODY PCK_PPOS_PERSONAL AS

    PROCEDURE SP_L_PERSONAL (
        I_IDT_TIPO_DOCUMENTO   	IN    NUMBER,
        I_NRO_DOCUMENTO        	IN    VARCHAR2,
        I_NOMBRE   			 	IN    VARCHAR2,
		I_APE_PATERNO		 	IN    VARCHAR2,
		I_APE_MATERNO		 	IN    VARCHAR2,
        R_LISTA        			OUT   SYS_REFCURSOR,
        R_CODIGO       			OUT   NUMBER,
        R_MENSAJE      			OUT   VARCHAR2
    ) AS
        V_SQL VARCHAR2(30000);
    BEGIN
        V_SQL := 'SELECT 
		M.ID,
		M.CARGO,
		M.FLG_ACTIVO,
		M.ID_USUARIO_CREA,
		M.FEC_USUARIO_CREA,
		M.ID_USUARIO_MOD,
		M.FEC_USUARIO_MOD,
		P.ID AS ID_PERSONA,
		P.IDT_TIPO_DOCUMENTO,
		(SELECT O.NOMBRE FROM MAESTRA O WHERE O.ID=P.IDT_TIPO_DOCUMENTO) AS NOM_TIPO_DOCUMENTO,
		P.IDT_SEXO,
		(SELECT O.NOMBRE FROM MAESTRA O WHERE O.ID=P.IDT_SEXO) AS NOM_SEXO,
		P.ID_PAIS,
		(SELECT O.NOMBRE FROM PAIS O WHERE O.ID=P.ID_PAIS) AS NOM_PAIS,
		P.ID_DEPARTAMENTO,
		(SELECT O.NOMBRE FROM DEPARTAMENTO O WHERE O.ID=P.ID_DEPARTAMENTO) AS NOM_DEPARTAMENTO,
		P.ID_PROVINCIA,
		(SELECT O.NOMBRE FROM PROVINCIA O WHERE O.ID=P.ID_PROVINCIA) AS NOM_PROVINCIA,
		P.ID_DISTRITO,
		(SELECT O.NOMBRE FROM DISTRITO O WHERE O.ID=P.ID_DISTRITO) AS NOM_DISTRITO,
		P.NOMBRE,
		P.APE_PATERNO,
		P.APE_MATERNO,
		P.NRO_DOCUMENTO,
		P.DIRECCION_DOMICILIO,
		P.FEC_NACIMIENTO
		FROM PERSONAL M
		INNER JOIN PERSONA P ON P.ID = M.ID_PERSONA
		WHERE M.FLG_ACTIVO=1';

        IF ( (I_IDT_TIPO_DOCUMENTO IS NOT NULL) AND (I_IDT_TIPO_DOCUMENTO <> 0) ) THEN
            V_SQL := V_SQL || ' AND P.IDT_TIPO_DOCUMENTO=' || I_IDT_TIPO_DOCUMENTO;
        END IF;

        IF ( I_NRO_DOCUMENTO IS NOT NULL ) THEN
            V_SQL := V_SQL || ' AND P.NRO_DOCUMENTO LIKE ''%' || I_NRO_DOCUMENTO || '%''';
        END IF;

        IF ( I_NOMBRE IS NOT NULL ) THEN
            V_SQL := V_SQL || ' AND P.NOMBRE LIKE ''%' || I_NOMBRE || '%''';
        END IF;
		
		IF ( I_APE_PATERNO IS NOT NULL ) THEN
            V_SQL := V_SQL || ' AND P.APE_PATERNO LIKE ''%' || I_APE_PATERNO || '%''';
        END IF;
		
		IF ( I_APE_MATERNO IS NOT NULL ) THEN
            V_SQL := V_SQL || ' AND P.APE_MATERNO LIKE ''%' || I_APE_MATERNO || '%''';
        END IF;

        V_SQL := V_SQL||' ORDER BY P.NOMBRE ASC';
        OPEN R_LISTA FOR V_SQL;

        R_CODIGO := SQLCODE;
		R_MENSAJE := SQLERRM;
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            R_CODIGO := SQLCODE;
            R_MENSAJE := SQLERRM;
    END SP_L_PERSONAL;

    PROCEDURE SP_I_PERSONAL (
        I_CARGO          		IN      VARCHAR2,
        I_IDT_TIPO_DOCUMENTO    IN      NUMBER,
        I_IDT_SEXO              IN      NUMBER,
        I_ID_PAIS               IN      NUMBER,
        I_ID_DEPARTAMENTO       IN      NUMBER,
        I_ID_PROVINCIA          IN      NUMBER,
        I_ID_DISTRITO           IN      NUMBER,
        I_NOMBRE         		IN      VARCHAR2,
		I_APE_PATERNO         	IN      VARCHAR2,
		I_APE_MATERNO         	IN      VARCHAR2,
		I_NRO_DOCUMENTO         IN      VARCHAR2,
		I_DIRECCION_DOMICILIO   IN      VARCHAR2,
		I_FEC_NACIMIENTO	    IN      VARCHAR2,
        I_FLG_ACTIVO         	IN      NUMBER,
        I_ID_USUARIO_CREA     	IN      NUMBER,
        I_FEC_USUARIO_CREA    	IN      VARCHAR2,
        R_ID                  	OUT     NUMBER,
		R_ID_PERSONA   			OUT  	NUMBER,
        R_CODIGO              	OUT     NUMBER,
        R_MENSAJE             	OUT     VARCHAR2
    ) AS
	V_CONT NUMBER;
    BEGIN
		SELECT COUNT(P.ID) INTO V_CONT FROM PERSONA P WHERE P.NRO_DOCUMENTO = I_NRO_DOCUMENTO;

		IF V_CONT > 0 THEN
			R_CODIGO := -1;
			R_MENSAJE := 'PERSONA YA SE HA REGISTRADO';
		ELSE
			SELECT SEQ_PERSONA.NEXTVAL INTO R_ID_PERSONA FROM DUAL;
			SELECT SEQ_PERSONAL.NEXTVAL INTO R_ID FROM DUAL;
			
			INSERT INTO PERSONA(ID, IDT_TIPO_DOCUMENTO, IDT_SEXO, ID_PAIS, ID_DEPARTAMENTO, ID_PROVINCIA, ID_DISTRITO, NOMBRE, APE_PATERNO, APE_MATERNO, NRO_DOCUMENTO, DIRECCION_DOMICILIO, FEC_NACIMIENTO)
			VALUES(R_ID_PERSONA, I_IDT_TIPO_DOCUMENTO, I_IDT_SEXO, I_ID_PAIS, I_ID_DEPARTAMENTO, I_ID_PROVINCIA, I_ID_DISTRITO, I_NOMBRE, I_APE_PATERNO, I_APE_MATERNO, I_NRO_DOCUMENTO, I_DIRECCION_DOMICILIO, TO_DATE(I_FEC_NACIMIENTO,'DD/MM/YYYY'));
			
			INSERT INTO PERSONAL(ID, ID_PERSONA, CARGO, FLG_ACTIVO, ID_USUARIO_CREA, FEC_USUARIO_CREA)
			VALUES(R_ID, R_ID_PERSONA, I_CARGO, I_FLG_ACTIVO, I_ID_USUARIO_CREA, TO_DATE(I_FEC_USUARIO_CREA,'DD/MM/YYYY'));			
			
			COMMIT;

			R_CODIGO := SQLCODE;
            R_MENSAJE := SQLERRM;
        END IF;
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            R_CODIGO := SQLCODE;
            R_MENSAJE := SQLERRM;
	END SP_I_PERSONAL;

    PROCEDURE SP_U_PERSONAL (
        I_ID                  	IN      NUMBER,
		I_ID_PERSONA           	IN      NUMBER,
        I_CARGO          		IN      VARCHAR2,
        I_IDT_TIPO_DOCUMENTO    IN      NUMBER,
        I_IDT_SEXO              IN      NUMBER,
        I_ID_PAIS               IN      NUMBER,
        I_ID_DEPARTAMENTO       IN      NUMBER,
        I_ID_PROVINCIA          IN      NUMBER,
        I_ID_DISTRITO           IN      NUMBER,
        I_NOMBRE         		IN      VARCHAR2,
		I_APE_PATERNO         	IN      VARCHAR2,
		I_APE_MATERNO         	IN      VARCHAR2,
		I_NRO_DOCUMENTO         IN      VARCHAR2,
		I_DIRECCION_DOMICILIO   IN      VARCHAR2,
		I_FEC_NACIMIENTO	    IN      VARCHAR2,
        I_FLG_ACTIVO         	IN      NUMBER,
        I_ID_USUARIO_MOD      	IN      NUMBER,
        I_FEC_USUARIO_MOD     	IN      VARCHAR2,
        R_CODIGO              	OUT     NUMBER,
        R_MENSAJE             	OUT     VARCHAR2
    ) AS
	V_CONT NUMBER;
    BEGIN
		SELECT COUNT(P.ID) INTO V_CONT FROM PERSONA P WHERE P.NRO_DOCUMENTO = I_NRO_DOCUMENTO AND P.ID != I_ID_PERSONA;

		IF V_CONT > 0 THEN
			R_CODIGO := -1;
			R_MENSAJE := 'PERSONA YA SE HA REGISTRADO';
		ELSE
			UPDATE PERSONA SET 
			IDT_TIPO_DOCUMENTO = I_IDT_TIPO_DOCUMENTO, 
			IDT_SEXO = I_IDT_SEXO, 
			ID_PAIS = I_ID_PAIS, 
			ID_DEPARTAMENTO = I_ID_DEPARTAMENTO, 
			ID_PROVINCIA = I_ID_PROVINCIA,
			ID_DISTRITO = I_ID_DISTRITO,
			NOMBRE = I_NOMBRE,
			APE_PATERNO = I_APE_PATERNO,
			APE_MATERNO = I_APE_MATERNO,
			NRO_DOCUMENTO =I_NRO_DOCUMENTO,
			DIRECCION_DOMICILIO = I_DIRECCION_DOMICILIO,
			FEC_NACIMIENTO = TO_DATE(I_FEC_NACIMIENTO,'DD/MM/YYYY')
			WHERE
			ID = I_ID_PERSONA;
			
			
			UPDATE PERSONAL SET
			CARGO = I_CARGO, 
			FLG_ACTIVO = I_FLG_ACTIVO,
			ID_USUARIO_MOD = I_ID_USUARIO_MOD,
			FEC_USUARIO_MOD = TO_DATE(I_FEC_USUARIO_MOD,'DD/MM/YYYY')
			WHERE
			ID =I_ID;
			
			COMMIT;

			R_CODIGO := SQLCODE;
            R_MENSAJE := SQLERRM;
        END IF;
		
        R_CODIGO := SQLCODE;
		R_MENSAJE := SQLERRM;
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            R_CODIGO := SQLCODE;
            R_MENSAJE := SQLERRM;
	END SP_U_PERSONAL;

    PROCEDURE SP_D_PERSONAL (
        I_ID                  IN      NUMBER,
        R_CODIGO              OUT     NUMBER,
        R_MENSAJE             OUT     VARCHAR2
    ) AS
    BEGIN
        UPDATE PERSONAL M SET M.FLG_ACTIVO=0 WHERE M.ID=I_ID;
        COMMIT;

        R_CODIGO := SQLCODE;
		R_MENSAJE := SQLERRM;
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            R_CODIGO := SQLCODE;
            R_MENSAJE := SQLERRM;
	END SP_D_PERSONAL;

END PCK_PPOS_PERSONAL;
/